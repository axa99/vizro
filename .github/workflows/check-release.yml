name: Check versions and build-publish

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "main"

jobs:
  check-version:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
          pip install --upgrade hatch

      - name: Check which ðŸ“¦ needs to be released
        run: |
          packages=("vizro-core") #  "vizro-core"

          for package in "${packages[@]}"; do
              cd $package
              version=$(hatch version)
              cd ..
              python tools/github_actions_release.py $package $version
          done

      - name: Set outputs
        id: version_check
        run: |
          echo "new_release=${{ env.NEW_RELEASE }}" >> $GITHUB_OUTPUT
          echo "package_name=${{ env.PACKAGE_NAME }}" >> $GITHUB_OUTPUT
          echo "package_version=${{ env.PACKAGE_VERSION }}" >> $GITHUB_OUTPUT
    outputs:
      new_release: ${{ steps.version_check.outputs.new_release }}
      package_name: ${{ steps.version_check.outputs.package_name }}
      package_version: ${{ steps.version_check.outputs.package_version }}

  build-publish:
    needs: [check-version]
    if: |
      needs.check-version.outputs.new_release == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch
      - name: Build package
        run: |
          cd "${{ needs.check-version.outputs.package_name }}"
          hatch build
      - name: Set PyPI token
        run: |
          if [ "${{ needs.check-version.outputs.PACKAGE_NAME }}" == "vizro-core" ]; then
              echo 'PYPI_TOKEN=${{ secrets.VIZRO_TEST_PYPI_TOKEN }}' >> $GITHUB_ENV
          fi
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ${{ needs.check-version.outputs.package_name }}/dist
          password: ${{ env.PYPI_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
